[{"C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\index.js":"1","C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\App.js":"3","C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\components\\Header\\Header.js":"4","C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\components\\Tagline\\Tagline.js":"5","C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\components\\UI\\Input\\Input.js":"6","C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\components\\UI\\Divider\\Divider.js":"7","C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\components\\UI\\Input\\RegularInput\\RegularInput.js":"8","C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\components\\UI\\Input\\AdvancedInput\\AdvancedInput.js":"9","C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\components\\Result\\Result.js":"10","C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\components\\UI\\Input\\AdvancedInput\\Input\\Input.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":469,"mtime":1627842632423,"results":"15","hashOfConfig":"13"},{"size":331,"mtime":1625950302290,"results":"16","hashOfConfig":"13"},{"size":174,"mtime":1625950302293,"results":"17","hashOfConfig":"13"},{"size":706,"mtime":1625950302297,"results":"18","hashOfConfig":"13"},{"size":142,"mtime":1625950302294,"results":"19","hashOfConfig":"13"},{"size":608,"mtime":1625950302299,"results":"20","hashOfConfig":"13"},{"size":5289,"mtime":1627840896531,"results":"21","hashOfConfig":"13"},{"size":2839,"mtime":1627843544328,"results":"22","hashOfConfig":"13"},{"size":742,"mtime":1625950302297,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"l30md6",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\index.js",[],["49","50"],"C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\App.js",[],"C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\components\\Header\\Header.js",[],"C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\components\\Tagline\\Tagline.js",[],"C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\components\\UI\\Input\\Input.js",[],"C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\components\\UI\\Divider\\Divider.js",[],"C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\components\\UI\\Input\\RegularInput\\RegularInput.js",["51","52","53"],"import { Input as InputBox, HStack, Container, Flex, Spacer, Stack, Center } from '@chakra-ui/react';\r\n\r\nimport classes from './RegularInput.module.css';\r\n\r\nconst RegularInput = (props) => (\r\n\t<Container className={classes['input-div']}>\r\n\t\t<Flex className={classes.label}>\r\n\t\t\t<p>Molecule</p>\r\n\t\t\t<Spacer />\r\n\t\t\t<Center className={classes.button} onClick={props.onAdvancedInput}>\r\n\t\t\t\t<i class=\"fas fa-caret-right fa-lg\" />\r\n\t\t\t\t<button>Advanced</button>\r\n\t\t\t</Center>\r\n\t\t</Flex>\r\n\t\t<input type=\"text\" className={classes.input} placeholder=\"Ibuprofen\" />\r\n\t</Container>\r\n);\r\n\r\nexport default RegularInput;\r\n","C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\components\\UI\\Input\\AdvancedInput\\AdvancedInput.js",["54"],"import Input from './Input/Input';\r\nimport Result from '../../../Result/Result';\r\n\r\nimport { Fragment, Component } from 'react';\r\n\r\nimport classes from './AdvancedInput.module.css';\r\n\r\nimport axios from 'axios'\r\n\r\n\r\nclass AdvancedInput extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            result: false,\r\n            scores: \"none\"\r\n        }\r\n\r\n        this.params = {\r\n            molecular_weight: '',\r\n            hydrogen_bond_donor_count: '',\r\n            hydrogen_bond_acceptor_count: '',\r\n            topological_polar_surface_area: '',\r\n            heavy_atom_count: '',\r\n            complexity: '',\r\n            melting_point: '',\r\n            solubility: '',\r\n            logp: '',\r\n        }\r\n\r\n        this.result = {\r\n            prediction_diabetes: '',\r\n            prediction_hypertenstion: '',\r\n            prediction_pain: '',\r\n        }\r\n    }\r\n\r\n    // Scores returned from API are decimals, format to rounded percentages and decreasing order\r\n    formatScores() {\r\n        var scores_copy = this.state.scores;\r\n\r\n        // rounded percentages\r\n        Object.keys(scores_copy).forEach(e => {\r\n            scores_copy[e] = (Number(scores_copy[e]) * 100).toFixed(2).toString() + '%';\r\n        })\r\n        \r\n        var sorted_scores = []\r\n\r\n        for (var key in scores_copy) {\r\n            sorted_scores.push([ key, scores_copy[key] ])\r\n        }\r\n\r\n        // sort scores in descending order\r\n        sorted_scores.sort(function compare(kv1, kv2) {\r\n            return kv1[1] < kv2[1]\r\n        })\r\n\r\n        console.log(\"sorted:\");\r\n        console.log(sorted_scores);\r\n        \r\n        this.setState({scores: sorted_scores});\r\n    }\r\n\r\n    changeHandler = e => {\r\n        this.params[e.target.name] = e.target.value\r\n    }\r\n\r\n    submitHandler = e => {\r\n        e.preventDefault()\r\n        console.log(this.state);\r\n        axios.post('https://drugmlapi-env.eba-f7kpi2dc.us-east-1.elasticbeanstalk.com/api/drug/', this.params)\r\n            .then(response => {\r\n                console.log(response)\r\n                this.setState({scores: response.data.message, result: true})\r\n                this.formatScores();\r\n                console.log(this.state.scores);\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { molecular_weight, hydrogen_bond_donor_count, hydrogen_bond_acceptor_count, topological_polar_surface_area, heavy_atom_count, complexity, melting_point, solubility, logp } = this.state\r\n        const inputs = [\r\n            {\r\n                label: 'Molecular Weight (g)',\r\n                name: 'molecular_weight',\r\n                value: molecular_weight,\r\n                placeholder: '570',\r\n                isFirst: true\r\n            },\r\n            {\r\n                label: 'Hydrogen Bond Donor Count',\r\n                name: 'hydrogen_bond_donor_count',\r\n                value: hydrogen_bond_donor_count,\r\n                placeholder: '129'\r\n            },\r\n            {\r\n                label: 'Hydrogen Bond Acceptor Count',\r\n                name: 'hydrogen_bond_acceptor_count',\r\n                value: hydrogen_bond_acceptor_count,\r\n                placeholder: '130'\r\n            },\r\n            {\r\n                label: 'Topological Polar Surface Area',\r\n                name: 'topological_polar_surface_area',\r\n                value: topological_polar_surface_area,\r\n                placeholder: '300'\r\n            },\r\n            {\r\n                label: 'Heavy Atom Count',\r\n                name: 'heavy_atom_count',\r\n                value: heavy_atom_count,\r\n                placeholder: '10000'\r\n            },\r\n            {\r\n                label: 'Complexity',\r\n                name: 'complexity',\r\n                value: complexity,\r\n                placeholder: '983'\r\n            },\r\n            {\r\n                label: 'Melting Point (K)',\r\n                name: 'melting_point',\r\n                value: melting_point,\r\n                placeholder: '340.56'\r\n            },\r\n            {\r\n                label: 'Solubility (mg/L)',\r\n                name: 'solubility',\r\n                value: solubility,\r\n                placeholder: '120'\r\n            },\r\n            {\r\n                label: 'logP',\r\n                name: 'logp',\r\n                value: logp,\r\n                placeholder: '980'\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <Fragment>\r\n                <form onSubmit={this.submitHandler}>\r\n                    {inputs.map((input) => (\r\n                        <Input\r\n                            label={input.label}\r\n                            name={input.name}\r\n                            value={input.value}\r\n                            placeholder={input.placeholder}\r\n                            isFirst={input.isFirst}\r\n                            onAdvancedInput={this.props.onAdvancedInput}\r\n                            onChange={this.changeHandler}\r\n                        />\r\n                    ))}\r\n                    <button type=\"submit\">Enter</button>\r\n                </form>\r\n                <Result scores={this.state.scores} />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdvancedInput;\r\n","C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\components\\Result\\Result.js",["55","56","57"],"C:\\Users\\pharmashawarma\\Downloads\\drugML\\drugML-app-frontend\\src\\components\\UI\\Input\\AdvancedInput\\Input\\Input.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":19,"nodeType":"64","messageId":"65","endLine":1,"endColumn":27},{"ruleId":"62","severity":1,"message":"66","line":1,"column":29,"nodeType":"64","messageId":"65","endLine":1,"endColumn":35},{"ruleId":"62","severity":1,"message":"67","line":1,"column":62,"nodeType":"64","messageId":"65","endLine":1,"endColumn":67},{"ruleId":"62","severity":1,"message":"68","line":6,"column":8,"nodeType":"64","messageId":"65","endLine":6,"endColumn":15},{"ruleId":"62","severity":1,"message":"66","line":1,"column":9,"nodeType":"64","messageId":"65","endLine":1,"endColumn":15},{"ruleId":"62","severity":1,"message":"67","line":1,"column":42,"nodeType":"64","messageId":"65","endLine":1,"endColumn":47},{"ruleId":"62","severity":1,"message":"69","line":1,"column":49,"nodeType":"64","messageId":"65","endLine":1,"endColumn":55},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'InputBox' is defined but never used.","Identifier","unusedVar","'HStack' is defined but never used.","'Stack' is defined but never used.","'classes' is defined but never used.","'Center' is defined but never used.","no-global-assign","no-unsafe-negation"]